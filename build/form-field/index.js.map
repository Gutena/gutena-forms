{"version":3,"file":"form-field/index.js","mappings":"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","sources":["webpack://gutena-forms/./src/form-field/edit.js","webpack://gutena-forms/./src/helper.js","webpack://gutena-forms/./src/icon.js","webpack://gutena-forms/external window [\"wp\",\"blockEditor\"]","webpack://gutena-forms/external window [\"wp\",\"blocks\"]","webpack://gutena-forms/external window [\"wp\",\"components\"]","webpack://gutena-forms/external window [\"wp\",\"data\"]","webpack://gutena-forms/external window [\"wp\",\"element\"]","webpack://gutena-forms/external window [\"wp\",\"hooks\"]","webpack://gutena-forms/external window [\"wp\",\"i18n\"]","webpack://gutena-forms/webpack/bootstrap","webpack://gutena-forms/webpack/runtime/compat get default export","webpack://gutena-forms/webpack/runtime/define property getters","webpack://gutena-forms/webpack/runtime/hasOwnProperty shorthand","webpack://gutena-forms/webpack/runtime/make namespace object","webpack://gutena-forms/./src/form-field/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { applyFilters, hasFilter } from '@wordpress/hooks';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n\tuseBlockProps,\n\tInspectorControls,\n\tstore as blockEditorStore,\n\tBlockControls,\n} from '@wordpress/block-editor';\nimport { gfIsEmpty, gfSanitizeName } from '../helper';\nimport { useDispatch, useSelect, select } from '@wordpress/data';\nimport {\n\tPanelBody,\n\tPanelRow,\n\tTextControl,\n\tToggleControl,\n\tRangeControl,\n\tSelectControl,\n\tFormTokenField,\n\tToolbarGroup, \n\tToolbarButton\n} from '@wordpress/components';\nimport { gutenaFormsIcon } from '../icon';\n\n//check for duplicate name attr\nconst isFieldNameAttrReserved = ( nameAttrCheck, clientIdCheck ) => {\n    const blocksClientIds = select( 'core/block-editor' ).getClientIdsWithDescendants();\n    return gfIsEmpty( blocksClientIds ) ? false : blocksClientIds.some( ( blockClientId ) => {\n        const { nameAttr  } = select( 'core/block-editor' ).getBlockAttributes( blockClientId );\n\t\t//different Client Id but same name attribute means duplicate\n        return clientIdCheck !== blockClientId && nameAttr === nameAttrCheck;\n    } );\n};\n\nexport default function edit( {\n\tclassName,\n\tattributes,\n\tsetAttributes,\n\tisSelected,\n\tclientId,\n\tcontext,\n\tgutenaExtends={}\n} ) {\n\n\tconst {\n\t\tnameAttr,\n\t\tfieldName,\n\t\tfieldClasses,\n\t\tfieldType,\n\t\tisRequired,\n\t\tplaceholder,\n\t\tdefaultValue,\n\t\tautocomplete,\n\t\tautoCapitalize,\n\t\ttextAreaRows,\n\t\tmaxlength,\n\t\tminMaxStep,\n\t\tpreFix,\n\t\tsufFix,\n\t\tselectOptions,\n\t\toptionsColumns,\n\t\toptionsInline,\n\t\tmultiSelect,\n\t\terrorRequiredMsg,\n\t\terrorInvalidInputMsg,\n\t\tdescription,\n\t\tsettings,\n\t\tstyle,\n\t} = attributes;\n\n\t//Fields which use input tag\n\tconst textLikeInput = [ 'text', 'email', 'number' ];\n\n\t\n\t//Field types\n\tconst formfieldTypes = [\n\t\t{ label: 'Text', value: 'text' },\n\t\t{ label: 'Number', value: 'number' },\n\t\t{ label: 'Range', value: 'range' },\n\t\t{ label: 'TextArea', value: 'textarea' },\n\t\t{ label: 'Email', value: 'email' },\n\t\t{ label: 'Dropdown', value: 'select' },\n\t\t{ label: 'Radio', value: 'radio' },\n\t\t{ label: 'Checkbox', value: 'checkbox' },\n\t];\n\n\tlet addNewFieldTypes = [];\n\tif ( hasFilter( 'gutenaforms.field.types' ) ) {\n\t\taddNewFieldTypes = applyFilters(\n\t\t\t'gutenaforms.field.types',\n\t\t\taddNewFieldTypes\n\t\t);\n\t}\n\n\tconst fieldTypes = ( gfIsEmpty( addNewFieldTypes ) || 0 ===  addNewFieldTypes.length ) ? formfieldTypes: [...formfieldTypes, ...addNewFieldTypes];\n\n\t//get new field types\n\tconst newFieldTypes = ( gfIsEmpty( addNewFieldTypes ) || 0 ===  addNewFieldTypes.length ) ? [] : addNewFieldTypes.map(field => field.value);\n\t\n\n\tconst [ selectInputOption, setSelectInputOption ] = useState(\n\t\tselectOptions[ 0 ]\n\t);\n\n\tconst [ htmlInputValue, setHtmlInputValue ] = useState('');\n\n\tconst {\n\t\tselectBlock,\n\t} = useDispatch( blockEditorStore );\n\n\tconst gutenaFormClientID = useSelect(\n\t\t( select ) => {\n\t\t\t//get parent gutena form clientIds\n\t\t\treturn select( blockEditorStore ).getBlockParentsByBlockName( clientId,'gutena/forms', true );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t/********************************\n\t Set Field Name : START\n\t *******************************/\n\t//Get Input Label from paragraph label block\n\t/**\n\t * https://developer.wordpress.org/block-editor/reference-guides/data/data-core-block-editor/#getpreviousblockclientid\n\t */\n\t//Get Input label ClientID\n\tconst labelClientId = useSelect( ( select ) => {\n\t\tlet labelParaClientId = select(\n\t\t\tblockEditorStore\n\t\t).getAdjacentBlockClientId( clientId, -1 );\n\t\tif ( gfIsEmpty( labelParaClientId ) ) {\n\t\t\tlabelParaClientId = select(\n\t\t\t\tblockEditorStore\n\t\t\t).getAdjacentBlockClientId( clientId, 1 );\n\t\t}\n\n\t\treturn labelParaClientId;\n\t}, [] );\n\n\t//Get Input label Content\n\tconst inputLabel = useSelect(\n\t\t( select ) => {\n\t\t\tif ( gfIsEmpty( labelClientId ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet labelAttr =\n\t\t\t\tselect( blockEditorStore ).getBlockAttributes( labelClientId );\n\t\t\treturn gfIsEmpty( labelAttr ) || gfIsEmpty( labelAttr.content )\n\t\t\t\t? ''\n\t\t\t\t: labelAttr.content.replace( /(<([^>]+)>)|\\*/gi, '' ).trim();\n\t\t},\n\t\t[ labelClientId ]\n\t);\n\n\t//Use to to update block attributes using clientId\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\t//set name attribute if default or duplicate\n\tuseEffect( () => {\n\t\tlet shouldSetNameAttr = true;\n\t\tif ( shouldSetNameAttr ) {\n\t\t\tif ( 'input_1' == nameAttr || '' == nameAttr || ( ! gfIsEmpty( nameAttr ) && isFieldNameAttrReserved( nameAttr, clientId ) ) ) {\n\t\t\t\tfor ( let index = 0; index < 5000; index++ ) {\n\t\t\t\t\tlet newNameAttr = 'f_'+index;\n\t\t\t\t\tif ( ! isFieldNameAttrReserved( newNameAttr, clientId ) ) {\n\t\t\t\t\t\t//rename label and name attribute\n\t\t\t\t\t\tsetAttributes( { \n\t\t\t\t\t\t\tnameAttr: newNameAttr\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//cleanup\n\t\treturn () => {\n\t\t\tshouldSetNameAttr = false;\n\t\t};\n\t\t\n\t}, [] );\n\n\t//Prepare field name attribute: replace space with underscore and remove unwanted characters\n\tconst prepareFieldNameAttr = ( fieldName ) => {\n\t\tfieldName = fieldName.toLowerCase().replace( / /g, '_' );\n\t\tfieldName = fieldName.replace(/\\W/g, '');\n\t\treturn fieldName;\n\t}\n\n\tconst setFieldNameAttr = ( fieldName, onChange = false ) => {\n\t\t//Set form field name\n\t\tsetAttributes( { fieldName } );\n\t\t\n\t\t//On change from setting sidebar : set label content in label paragraph block\n\t\tif ( onChange && ! gfIsEmpty( labelClientId ) ) {\n\t\t\tupdateBlockAttributes( labelClientId, { content: fieldName } );\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\tlet shouldRunInputLabel = true;\n\t\tif ( shouldRunInputLabel ) {\n\t\t\tsetFieldNameAttr( inputLabel );\n\t\t}\n\n\t\t//cleanup\n\t\treturn () => {\n\t\t\tshouldRunInputLabel = false;\n\t\t};\n\t}, [ inputLabel ] );\n\n\t/********************************\n\t Set Field Name : END\n\t *******************************/\n\n\t// Remove unwanted field syles\n\tconst remove_unnecessary_styles = ( ) => {\n\t\t//Input type range styles\n\t\tlet remove_button = document.querySelector('.block-editor-block-styles__variants [aria-label=\"Border Style\"]');\n\t\tif ( ! gfIsEmpty( remove_button ) ) {\n\t\t\tremove_button.style.display = ( isSelected && 'range' === fieldType ) ? 'inline-block': 'none';\n\t\t}\n\t}\n\n\t//Run on select block\n\tuseEffect( () => {\n\t\tlet shouldRunRemoveStyle = true;\n\t\tif ( shouldRunRemoveStyle ) {\n\t\t\t// Remove unwanted field syles\n\t\t\tremove_unnecessary_styles();\n\t\t}\n\n\t\t//cleanup\n\t\treturn () => {\n\t\t\tshouldRunRemoveStyle = false;\n\t\t};\n\t}, [ isSelected ] );\n\n\t//Save form field Classnames for gutena forms field block\n\tuseEffect( () => {\n\t\tlet shouldRunFieldClassnames = true;\n\t\tif ( shouldRunFieldClassnames ) {\n\t\t\t// Remove unwanted field syles\n\t\t\tremove_unnecessary_styles();\n\n\t\t\tlet InputClassName = `gutena-forms-field ${ fieldType }-field ${ isRequired ? 'required-field' : ''\n\t\t\t} ${ autocomplete ? 'autocomplete': '' } `;\n\t\t\tif ( -1 !== ['radio', 'checkbox'].indexOf( fieldType ) ) {\n\t\t\t\tInputClassName += optionsInline ? ' inline-options' : ' has-'+optionsColumns+'-col';\n\t\t\t}\n\t\t\tsetAttributes( { fieldClasses: InputClassName } );\n\t\t}\n\n\t\t//cleanup\n\t\treturn () => {\n\t\t\tshouldRunFieldClassnames = false;\n\t\t};\n\t}, [ fieldType, isRequired, optionsInline, optionsColumns, autocomplete ] );\n\n\t/********************************\n\t Input Field Component : START\n\t *******************************/\n\tconst inputFieldComponent = () => {\n\t\t//Input Field\n\t\tif ( 0 <= textLikeInput.indexOf( fieldType ) ) {\n\t\t\treturn (\n\t\t\t\t<input\n\t\t\t\t\ttype={ fieldType }\n\t\t\t\t\tclassName={ fieldClasses }\n\t\t\t\t\tvalue={ htmlInputValue ?? '' }\n\t\t\t\t\tonChange={\n\t\t\t\t\t\t(e) => setHtmlInputValue(e.target.value)\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={\n\t\t\t\t\t\tplaceholder ? placeholder : __( 'Placeholder…' )\n\t\t\t\t\t}\n\t\t\t\t\trequired={ isRequired ? 'required' : '' }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\t//Input Field range\n\t\tif ( 'range' === fieldType ) {\n\t\t\treturn (\n\t\t\t\t<div className='gf-range-container'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype={ fieldType }\n\t\t\t\t\t\tclassName={ fieldClasses }\n\t\t\t\t\t\trequired={ isRequired ? 'required' : '' }\n\t\t\t\t\t\tvalue={ htmlInputValue ?? '' }\n\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t(e) => setHtmlInputValue(e.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='gf-range-values' >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t! gfIsEmpty( minMaxStep?.min ) && \n\t\t\t\t\t\t\t<span className='gf-prefix-value-wrapper'>\n\t\t\t\t\t\t\t\t<span className='gf-prefix'>{ gfIsEmpty( preFix ) ? '': preFix }</span>\n\t\t\t\t\t\t\t\t<span className='gf-value'>{ minMaxStep?.min }</span>\n\t\t\t\t\t\t\t\t<span className='gf-suffix'>{ gfIsEmpty( sufFix ) ? '': sufFix }</span>\n\t\t\t\t\t\t\t</span> \n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t! gfIsEmpty( htmlInputValue ) && \n\t\t\t\t\t\t\t<span className='gf-prefix-value-wrapper'>\n\t\t\t\t\t\t\t\t<span className='gf-prefix'>{ gfIsEmpty( preFix ) ? '': preFix }</span>\n\t\t\t\t\t\t\t\t<span className='gf-value range-input-value'>{ htmlInputValue }</span>\n\t\t\t\t\t\t\t\t<span className='gf-suffix'>{ gfIsEmpty( sufFix ) ? '': sufFix }</span>\n\t\t\t\t\t\t\t</span> \n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t! gfIsEmpty( minMaxStep?.max ) && \n\t\t\t\t\t\t\t<span className='gf-prefix-value-wrapper'>\n\t\t\t\t\t\t\t\t<span className='gf-prefix'>{ gfIsEmpty( preFix ) ? '': preFix }</span>\n\t\t\t\t\t\t\t\t<span className='gf-value'>{ minMaxStep?.max }</span>\n\t\t\t\t\t\t\t\t<span className='gf-suffix'>{ gfIsEmpty( sufFix ) ? '': sufFix }</span>\n\t\t\t\t\t\t\t</span> \n\t\t\t\t\t\t}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t//Textarea Field\n\t\tif ( 'textarea' === fieldType ) {\n\t\t\treturn (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={ fieldClasses }\n\t\t\t\t\tplaceholder={\n\t\t\t\t\t\tplaceholder ? placeholder : __( 'Placeholder…' )\n\t\t\t\t\t}\n\t\t\t\t\trequired={ isRequired ? 'required' : '' }\n\t\t\t\t\trows={ textAreaRows }\n\t\t\t\t></textarea>\n\t\t\t);\n\t\t}\n\n\t\tif ( 'select' === fieldType ) {\n\t\t\treturn (\n\t\t\t\t<select\n\t\t\t\t\tclassName={ fieldClasses }\n\t\t\t\t\tvalue={ selectInputOption }\n\t\t\t\t\tonChange={ ( e ) => setSelectInputOption( e.target.value ) }\n\t\t\t\t\trequired={ isRequired ? 'required' : '' }\n\t\t\t\t>\n\t\t\t\t\t{ selectOptions.map( ( item, index ) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={ index } value={ item }>\n\t\t\t\t\t\t\t\t{ item }\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</select>\n\t\t\t);\n\t\t}\n\n\t\tif ( 'radio' === fieldType || 'checkbox' === fieldType ) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName={ fieldClasses }\n\t\t\t\t>\n\t\t\t\t{ \n\t\t\t\tselectOptions.map( ( item, index ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<label key={ index } className={ fieldType+'-container' } > \n\t\t\t\t\t\t\t{ item }\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype={ fieldType } \n\t\t\t\t\t\t\tname={ fieldName } \n\t\t\t\t\t\t\tvalue={ item }\n\t\t\t\t\t\t\tchecked={ item === selectInputOption}\n\t\t\t\t\t\t\tonChange={ ( e ) => setSelectInputOption( e.target.value ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t);\n\t\t\t\t} ) \n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif ( ! gfIsEmpty( gutenaExtends?.inputFieldComponent ) && 0 <= newFieldTypes.indexOf( fieldType ) ) {\n\t\t   return gutenaExtends.inputFieldComponent();\n\t\t}\n\t};\n\n\t/********************************\n\t Input Field Component : END\n\t *******************************/\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: `gutena-forms-${ fieldType }-field field-name-${ nameAttr } ${ optionsInline ? 'gf-inline-content' : '' }`,\n\t} );\n\n\t\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon={ gutenaFormsIcon }\n\t\t\t\t\t\tlabel={ __( 'Select form block', 'gutena-forms' ) }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tif ( ! gfIsEmpty( gutenaFormClientID ) ) {\n\t\t\t\t\t\t\t\tselectBlock( gutenaFormClientID[0] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Field Type', 'gutena-forms' ) } initialOpen={ true }>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tvalue={ fieldType }\n\t\t\t\t\t\toptions={ fieldTypes }\n\t\t\t\t\t\tonChange={ ( fieldType ) =>\n\t\t\t\t\t\t\tsetAttributes( { fieldType } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Select appropriate field type for input',\n\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! gfIsEmpty( gutenaExtends?.gfcontrols ) && gutenaExtends.gfcontrols() }\n\t\t\t\t\t{ ( -1 !== ['select', 'checkbox', 'radio'].indexOf( fieldType ) ) && (\n\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\tlabel={ autocomplete ? __( 'Preferences', 'gutena-forms' ) : __( 'Options', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ selectOptions }\n\t\t\t\t\t\t\tsuggestions={ selectOptions }\n\t\t\t\t\t\t\tonChange={ ( selectOptions ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { selectOptions } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ -1 !== ['radio', 'checkbox'].indexOf( fieldType ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Show Inline', 'gutena-forms' ) }\n\t\t\t\t\t\t\tclassName=\"gf-mt-1\"\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\toptionsInline\n\t\t\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to make options show in columns',\n\t\t\t\t\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to make options show inline',\n\t\t\t\t\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchecked={ optionsInline }\n\t\t\t\t\t\t\tonChange={ ( optionsInline ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { optionsInline } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t! optionsInline &&\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns', 'gutena-forms' ) }\n\t\t\t\t\t\t\t\tvalue={ optionsColumns }\n\t\t\t\t\t\t\t\tonChange={ ( optionsColumns ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( { optionsColumns } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tmax={ 6 }\n\t\t\t\t\t\t\t\tstep={ 1 }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ( 'number' === fieldType || 'range' === fieldType ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<h2 className=\"block-editor-block-card__title gf-mt-1 \">{ __( 'Value', 'gutena-forms' ) }</h2>\n\t\t\t\t\t\t<PanelRow className=\"gf-child-mb-0 gf-mb-24\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={ __( 'Minimum', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ minMaxStep?.min }\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={ ( min ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { minMaxStep:{\n\t\t\t\t\t\t\t\t\t...minMaxStep,\n\t\t\t\t\t\t\t\t\tmin\n\t\t\t\t\t\t\t\t} } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={ __( 'Maximum', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ minMaxStep?.max }\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={ ( max ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { minMaxStep:{\n\t\t\t\t\t\t\t\t\t...minMaxStep,\n\t\t\t\t\t\t\t\t\tmax\n\t\t\t\t\t\t\t\t} } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={ __( 'Step', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ minMaxStep?.step }\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={ ( step ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { minMaxStep:{\n\t\t\t\t\t\t\t\t\t...minMaxStep,\n\t\t\t\t\t\t\t\t\tstep\n\t\t\t\t\t\t\t\t} } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t<PanelRow className=\"gf-child-mb-0 gf-mb-24\">\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Prefix', 'gutena-forms' ) }\n\t\t\t\t\t\t\t\tvalue={ preFix }\n\t\t\t\t\t\t\t\tonChange={ ( preFix ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( { preFix } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Suffix', 'gutena-forms' ) }\n\t\t\t\t\t\t\t\tvalue={ sufFix }\n\t\t\t\t\t\t\t\tonChange={ ( sufFix ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( { sufFix } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={ __( 'Field settings', 'gutena-forms' ) } initialOpen={ true }>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Label', 'gutena-forms' )+' * ' }\n\t\t\t\t\t\tclassName={ gfIsEmpty( fieldName ) ? ' gf-required-field':'' }\n\t\t\t\t\t\thelp={ gfIsEmpty( fieldName ) ? __(\n\t\t\t\t\t\t\t'Please add label to the field',\n\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t):'' }\n\t\t\t\t\t\tvalue={ fieldName ?? '' }\n\t\t\t\t\t\tonChange={ ( fieldName ) =>\n\t\t\t\t\t\t\tsetFieldNameAttr( fieldName, true )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t{ ! gfIsEmpty( gutenaExtends?.gfSettings ) && gutenaExtends.gfSettings() }\n\t\t\t\t\t{ -1 !== ['text', 'textarea'].indexOf( fieldType ) && (\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Maxlength', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ maxlength }\n\t\t\t\t\t\t\tonChange={ ( maxlength ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { maxlength } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\tmax={ 500 }\n\t\t\t\t\t\t\tstep={ 25 }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ 'textarea' === fieldType && (\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Textarea Rows', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ textAreaRows }\n\t\t\t\t\t\t\tonChange={ ( textAreaRows ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { textAreaRows } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 2 }\n\t\t\t\t\t\t\tmax={ 20 }\n\t\t\t\t\t\t\tstep={ 1 }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={ __( 'Placeholder', 'gutena-forms' ) }\n\t\t\t\t\t\t\tvalue={ placeholder }\n\t\t\t\t\t\t\tonChange={ ( placeholder ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { placeholder } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Required', 'gutena-forms' ) }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to make input field not required',\n\t\t\t\t\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to make input field required',\n\t\t\t\t\t\t\t\t\t\t\t'gutena-forms'\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchecked={ isRequired }\n\t\t\t\t\t\t\tonChange={ ( isRequired ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { isRequired } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ fieldType.length > 0 ? inputFieldComponent() : '' }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","//Check if undefined, null, empty\n\nexport const gfIsEmpty = ( data ) => {\n\treturn 'undefined' === typeof data || null === data || '' === data;\n};\n\nexport const gfSanitizeName = ( name ) => {\n\tif ( gfIsEmpty( name ) ) {\n\t\tname = '';\n\t} else {\n\t\tname = name.toLowerCase().replace( / /g, '_' );\n\t\tname = name.replace(/\\W/g, '');\n\t}\n\t\n\treturn name;\n}","import { Icon } from '@wordpress/components';\n\nexport const gutenaFormsIcon = () => (\n\t<Icon\n\t\ticon={ () => (\n\t\t\t<svg\n\t\t\t\twidth=\"24\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tcolor=\"#ffffff\"\n\t\t\t>\n\t\t\t\t<rect\n\t\t\t\t\tx=\"2.75\"\n\t\t\t\t\ty=\"3.75\"\n\t\t\t\t\twidth=\"18.5\"\n\t\t\t\t\theight=\"16.5\"\n\t\t\t\t\tstroke=\"#0EA489\"\n\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t/>\n\t\t\t\t<rect x=\"6\" y=\"7\" width=\"12\" height=\"1\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"6\" y=\"11\" width=\"12\" height=\"1\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"6\" y=\"15\" width=\"12\" height=\"1\" fill=\"#0EA489\" />\n\t\t\t</svg>\n\t\t) }\n\t/>\n);","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport edit from './edit';\nimport metadata from './block.json';\nimport { Icon } from '@wordpress/components';\n\nconst formFieldIcon = () => (\n\t<Icon\n\t\ticon={ () => (\n\t\t\t<svg\n\t\t\t\twidth=\"24\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t>\n\t\t\t\t<rect x=\"2\" y=\"4\" width=\"8\" height=\"2\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"2\" y=\"11\" width=\"8\" height=\"2\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"14\" y=\"4\" width=\"8\" height=\"2\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"14\" y=\"11\" width=\"8\" height=\"2\" fill=\"#0EA489\" />\n\t\t\t\t<rect x=\"2\" y=\"18\" width=\"20\" height=\"2\" fill=\"#0EA489\" />\n\t\t\t</svg>\n\t\t) }\n\t/>\n);\n\nregisterBlockType( metadata, {\n\ticon: formFieldIcon,\n\tedit,\n} );\n"],"names":["__","applyFilters","hasFilter","useState","useEffect","useBlockProps","InspectorControls","store","blockEditorStore","BlockControls","gfIsEmpty","gfSanitizeName","useDispatch","useSelect","select","PanelBody","PanelRow","TextControl","ToggleControl","RangeControl","SelectControl","FormTokenField","ToolbarGroup","ToolbarButton","gutenaFormsIcon","isFieldNameAttrReserved","nameAttrCheck","clientIdCheck","blocksClientIds","getClientIdsWithDescendants","some","blockClientId","nameAttr","getBlockAttributes","edit","className","attributes","setAttributes","isSelected","clientId","context","gutenaExtends","fieldName","fieldClasses","fieldType","isRequired","placeholder","defaultValue","autocomplete","autoCapitalize","textAreaRows","maxlength","minMaxStep","preFix","sufFix","selectOptions","optionsColumns","optionsInline","multiSelect","errorRequiredMsg","errorInvalidInputMsg","description","settings","style","textLikeInput","formfieldTypes","label","value","addNewFieldTypes","fieldTypes","length","newFieldTypes","map","field","selectInputOption","setSelectInputOption","htmlInputValue","setHtmlInputValue","selectBlock","gutenaFormClientID","getBlockParentsByBlockName","labelClientId","labelParaClientId","getAdjacentBlockClientId","inputLabel","labelAttr","content","replace","trim","updateBlockAttributes","shouldSetNameAttr","index","newNameAttr","prepareFieldNameAttr","toLowerCase","setFieldNameAttr","onChange","shouldRunInputLabel","remove_unnecessary_styles","remove_button","document","querySelector","display","shouldRunRemoveStyle","shouldRunFieldClassnames","InputClassName","indexOf","inputFieldComponent","e","target","min","max","item","blockProps","gfcontrols","step","gfSettings","data","name","Icon","registerBlockType","metadata","formFieldIcon","icon"],"sourceRoot":""}